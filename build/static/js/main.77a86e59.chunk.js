(this["webpackJsonppython-code-review"]=this["webpackJsonppython-code-review"]||[]).push([[0],{20:function(e,t,n){},21:function(e,t,n){},27:function(e,t,n){},28:function(e,t,n){"use strict";n.r(t);var c=n(2),i=n.n(c),s=n(10),r=n.n(s),a=(n(20),n(21),n(1)),o=n(0);function d(e){return Object(o.jsxs)(a.i,{children:[Object(o.jsx)(a.a,{children:"Git, Code Style and Code Review"}),Object(o.jsx)(a.b,{children:"Yufan Yuan | Orka"})]})}var l=function(){return Object(o.jsx)(o.Fragment,{children:Object(o.jsxs)(a.i,{children:[Object(o.jsx)(a.a,{children:"Easy git"}),Object(o.jsx)("pre",{"data-id":"Indent",children:Object(o.jsx)("code",{className:"coding-style-code","data-trim":!0,"data-line-numbers":!0,dangerouslySetInnerHTML:{__html:'\n              # get latest code\n              git pull\n              # create a new branch and start working on it\n              git checkout -b [BranchName]\n              # save all changes\n              git add .\n              # commit your codes\n              git commit -m "commit message"\n              # push it to the server\n              git push\n              '}})})]})})},j=(n(27),function(){return Object(o.jsxs)(o.Fragment,{children:[Object(o.jsx)(a.i,{autoAnimate:!0,children:Object(o.jsxs)(a.a,{itemID:"header",children:[Object(o.jsx)(a.j,{fragment:!0,fragmentIndex:0,children:"Why do"})," we need Code Style",Object(o.jsx)(a.j,{fragment:!0,fragmentIndex:0,children:"?"})]})}),Object(o.jsxs)(a.i,{autoAnimate:!0,children:[Object(o.jsxs)(a.a,{itemID:"header",children:[Object(o.jsx)(a.j,{children:"Why do"})," we need Code Style",Object(o.jsx)(a.j,{children:"?"})]}),Object(o.jsx)(a.d,{width:"80%",src:"shittyCode.png"})]}),Object(o.jsxs)(a.i,{autoAnimate:!0,children:[Object(o.jsxs)(a.a,{itemID:"header",children:[Object(o.jsx)(a.j,{children:"Why do"})," we need Code Style",Object(o.jsx)(a.j,{children:"?"})]}),Object(o.jsx)("div",{className:"coding-style-list-container",children:Object(o.jsxs)(a.f,{className:"coding-style-list",children:[Object(o.jsxs)(a.e,{children:[Object(o.jsx)("a",{href:"https://paperswithcode.com/",children:"https://paperswithcode.com/"})," and ",Object(o.jsx)("a",{href:"https://paperswithoutcode.com/",children:"https://paperswithoutcode.com/"})]}),Object(o.jsx)(a.e,{children:"much easier debuging"})]})})]})]})}),h=function(){return Object(o.jsxs)(o.Fragment,{children:[Object(o.jsxs)(a.i,{children:[Object(o.jsx)(a.a,{children:"Code Style PEP8 - Indent & Whitespace"}),Object(o.jsx)("pre",{children:Object(o.jsx)("code",{className:"coding-style-code","data-trim":!0,"data-line-numbers":!0,dangerouslySetInnerHTML:{__html:"\n# Use four whitespaces\ndef fool(*args, **kwargs):\n    pass # four whitespaces\n\tpass # tab\n"}})})]}),Object(o.jsxs)(a.i,{children:[Object(o.jsx)(a.a,{children:"Code Style PEP8 - Indent & Whitespace"}),Object(o.jsx)("pre",{"data-id":"Indent",children:Object(o.jsx)("code",{className:"coding-style-code","data-trim":!0,"data-line-numbers":!0,dangerouslySetInnerHTML:{__html:"\n# Always surround these binary operators with a single space on \n# either side:assignment (=), augmented assignment (+=, -= etc.),\n# comparisons (==, <, >, !=, <>, <=, >=, in, not in, is, is not), \n# Booleans (and, or, not).\nsubmitted += 1            # Correct\nsubmitted +=1             # Wrong\n\n# consider adding whitespace around the operators with the lowest\n# priority(ies)\nhypot2 = x*x + y*y        # Correct\nhypot2 = x * x + y * y    # Wrong\n\n              "}})})]}),Object(o.jsxs)(a.i,{children:[Object(o.jsx)(a.a,{children:"Code Style PEP8 - naming"}),Object(o.jsx)("pre",{"data-id":"Indent",children:Object(o.jsx)("code",{className:"coding-style-code","data-trim":!0,"data-line-numbers":!0,dangerouslySetInnerHTML:{__html:"\n# Types and Classes naming: UpperCamelCase\nclass NewClass:\n    def __init__(self):\n        self.instance_variable = 1\n\n# Functions and Variables naming: snake_case\nvariable_one = 'Hello, World!'\n\n# Constants naming: \nI_DON_T_KNOW_HOW_TO_EXPLAIN_IT = 'example'\n              "}})})]}),Object(o.jsxs)(a.i,{children:[Object(o.jsx)(a.a,{children:"Code Style PEP8 - Imports"}),Object(o.jsxs)("div",{className:"coding-style-import-container",children:[Object(o.jsx)(a.g,{children:"imports are always put at the top of the file, just after any module comments and docstrings, and before module globals and constants."}),Object(o.jsx)(a.g,{children:"Imports should be grouped in the following order:"}),Object(o.jsxs)(a.f,{children:[Object(o.jsx)(a.e,{children:"Standard library imports."}),Object(o.jsx)(a.e,{children:"Related third party imports."}),Object(o.jsx)(a.e,{children:"Local application/library specific imports."})]}),Object(o.jsx)(a.g,{children:"You should put a blank line between each group of imports."}),Object(o.jsx)(a.g,{children:"--PEP8"})]})]})]})},b=function(){return Object(o.jsx)(a.i,{children:Object(o.jsx)(a.a,{children:"pylint can be very helpful"})})},u=function(){return Object(o.jsxs)(o.Fragment,{children:[Object(o.jsx)(j,{}),Object(o.jsx)(h,{}),Object(o.jsx)(b,{})]})},m=function(){return Object(o.jsxs)(a.i,{children:[Object(o.jsx)(a.a,{children:"Code Review"}),Object(o.jsx)(a.d,{src:"tooLongCodeReview.jpg"})]})},g=function(){return Object(o.jsxs)(o.Fragment,{children:[Object(o.jsxs)(a.i,{autoAnimate:!0,children:[Object(o.jsx)(a.a,{children:"Using Github - Setting up ssh"}),Object(o.jsxs)(a.g,{children:[Object(o.jsx)("a",{href:"https://devconnected.com/how-to-setup-ssh-keys-on-github/",children:"This tutorial"})," is a complete tutorial for setting up git over ssh. If you found it difficult to connect the github's server, you can add more lines into the config file introduced in",Object(o.jsx)("a",{href:"https://devconnected.com/how-to-setup-ssh-keys-on-github/#Configure_your_SSH_keys",children:" this part."})]}),Object(o.jsx)("pre",{children:Object(o.jsx)("code",{className:"coding-style-code","data-trim":!0,"data-line-numbers":!0,dangerouslySetInnerHTML:{__html:"\n              Host github.com\n                Hostname github.com\n                User git\n                IdentityFile ~/.ssh/custom_id_rsa\n                # ProxySettings:\n                # if you are using mac or linux, use nc.\n                # if you are using windows, plz find out\n                # where your git is installed. There should\n                # always be a 'connect.exe' in git's\n                # installation directory. e.g. my connect.exe\n                # path is C:\\Program Files\\Git\\mingw64\\bin\\connect.exe\n                # my git install path is C:\\Program Files\\Git\n                # E.g. mac/linux proxy command\n                ProxyCommand $(which nc) -X 5 -x 127.0.0.1:1080 %h %p\n                # E.g. Windows proxy command\n                ProxyCommand C:\\Program Files\\Git\\mingw64\\bin\\connect.exe -S 127.0.0.1:1080 %h %p\n              "}})})]}),Object(o.jsxs)(a.i,{autoAnimate:!0,children:[Object(o.jsx)(a.a,{children:"Github - create new Repo"}),Object(o.jsx)(a.g,{children:"Simply create a new Repo, DO NOT FORGET MAKING IT PRIVATE"}),Object(o.jsx)(a.d,{src:"createRepo.png"})]}),Object(o.jsxs)(a.i,{autoAnimate:!0,children:[Object(o.jsx)(a.a,{children:"Github - create new Repo"}),Object(o.jsx)(a.g,{children:"copy the git repo url"}),Object(o.jsx)(a.d,{width:"90%",src:"brandNewRepo.png"})]}),Object(o.jsxs)(a.i,{autoAnimate:!0,children:[Object(o.jsx)(a.a,{children:"Github - create new Repo"}),Object(o.jsx)(a.g,{children:"type the following command to upload your current code to the repository"}),Object(o.jsx)("pre",{children:Object(o.jsx)("code",{className:"coding-style-code","data-trim":!0,"data-line-numbers":!0,dangerouslySetInnerHTML:{__html:'\n              cd [your_project_directory]\n              git init\n              git remote add origin [your_git_repo_url]\n              git add .\n              git commit -m "init commit"\n              git push --set-upstream origin master\n              '}})})]}),Object(o.jsxs)(a.i,{autoAnimate:!0,children:[Object(o.jsx)(a.a,{children:"Github - create pull request"}),Object(o.jsx)(a.g,{children:"After you finish pulling code from github, the first thing you should do is create and checkout to your own branch"}),Object(o.jsx)("pre",{"data-id":"Indent",children:Object(o.jsx)("code",{className:"coding-style-code","data-trim":!0,"data-line-numbers":!0,dangerouslySetInnerHTML:{__html:"\n# git checkout -b [branch-name]\ngit checkout -b yufanDev\n              "}})})]}),Object(o.jsxs)(a.i,{autoAnimate:!0,children:[Object(o.jsx)(a.a,{children:"Github - create pull request"}),Object(o.jsx)(a.g,{children:"You are now working on your branch."}),Object(o.jsx)(a.g,{children:"After a bunch of works you may want to push your code to github and find someone to review your code. the first thing you should do is making a commit"}),Object(o.jsx)("pre",{"data-id":"Indent",children:Object(o.jsx)("code",{className:"coding-style-code","data-trim":!0,"data-line-numbers":!0,dangerouslySetInnerHTML:{__html:'\n# let git know all your changes\ngit add .\n# pack all these changes into a single commit and give this commit a proper description\ngit commit -m "added balabala | fixed balabala | removed balabala"\n              '}})})]}),Object(o.jsxs)(a.i,{autoAnimate:!0,children:[Object(o.jsx)(a.a,{children:"Github - create pull request"}),Object(o.jsx)(a.g,{children:"you can now create a pull request"}),Object(o.jsx)("span",{children:" with github-cli"}),Object(o.jsx)(a.g,{children:"I would strongly recommand learning github-cli. This will save you a lot of time."}),Object(o.jsx)("pre",{"data-id":"Indent",children:Object(o.jsx)("code",{className:"coding-style-code","data-trim":!0,"data-line-numbers":!0,dangerouslySetInnerHTML:{__html:"\n# simply type this command and then follow the instructions from github-cli\ngh pr create --base master\n              "}})})]}),Object(o.jsxs)(a.i,{autoAnimate:!0,children:[Object(o.jsx)(a.a,{children:"Github - create pull request"}),Object(o.jsx)(a.g,{children:"you can now create a pull request"}),Object(o.jsx)("span",{children:" with website"}),Object(o.jsx)(a.d,{width:"100%",src:"createPullRequest.png"})]})]})},x=function(){return Object(o.jsxs)(o.Fragment,{children:[Object(o.jsx)(m,{}),Object(o.jsx)(g,{})]})},O=function(){return Object(o.jsx)(a.i,{children:Object(o.jsx)(a.a,{children:"Thank You."})})};var p=function(){return Object(c.useEffect)((function(){}),[]),Object(o.jsx)("div",{className:"App",children:Object(o.jsxs)(a.h,{width:1280,height:960,plugins:[a.c],children:[Object(o.jsx)(d,{}),Object(o.jsx)(u,{}),Object(o.jsx)(l,{}),Object(o.jsx)(x,{}),Object(o.jsx)(O,{})]})})},y=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,29)).then((function(t){var n=t.getCLS,c=t.getFID,i=t.getFCP,s=t.getLCP,r=t.getTTFB;n(e),c(e),i(e),s(e),r(e)}))};r.a.render(Object(o.jsx)(i.a.StrictMode,{children:Object(o.jsx)(p,{})}),document.getElementById("root")),y()}},[[28,1,2]]]);
//# sourceMappingURL=main.77a86e59.chunk.js.map